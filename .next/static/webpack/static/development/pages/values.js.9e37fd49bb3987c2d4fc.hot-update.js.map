{"version":3,"file":"static/webpack/static/development/pages/values.js.9e37fd49bb3987c2d4fc.hot-update.js","sources":["webpack:///./pages/values.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../public/styles/css/values.css';\n// import '/assets/icons/values-down-arrow.png' from '/assets/icons/values-down-arrow.png'\nimport {ValuesHeader} from '../components/header2'\n\nconst Values = ()=>{\n  \n  const [loadStatus, setLoad] = useState('no')\n  const [counter, setCounter] = useState(0)\n  const [touchStartPoint, setTouchStartPoint] = useState(0);\n  const title = ['diligence', 'joy', 'service', 'courage', 'receptivity'];\n  const text = [\n    'If doing something, do it all the way.',\n    'We try to focus on the pleasant elements.',\n    'Let’s empathize with the experiences of others, and help out where we can.',\n    'Though the future is ours to shape, we acknowledge the present as it is.',\n    'Only by embracing the unknown are we free to find solutions we can’t initially imagine.',\n  ];\n\n  const nextValue = ()=>{\n    shrinkContent();\n    setTimeout(()=>{setCounter(counter + 1)}, 500)\n  }\n  const prevValue = ()=>{\n    shrinkContent();\n    setTimeout(()=>{setCounter(counter - 1)}, 500)\n  }\n\n  const shrinkContent = ()=>{\n      document.getElementById('value-text-div').style.width = 0;\n      document.getElementById('value-text').style.bottom = '10px';\n      document.getElementById('value-text').style.opacity = 0;\n      document.getElementById('value-title').style.opacity = 0;  \n  }\n  \n  const readWheel = (e)=>{\n    if(document.getElementById('value-title')){\n      if(e.deltaY > 0 && counter <= 5){\n          nextValue();\n          window.removeEventListener('wheel', readWheel);\n        }  \n      else if(e.deltaY < 0 && counter >= 1){\n        prevValue();\n        window.removeEventListener('wheel', readWheel);\n      }}\n  }\n\n  const readSwipe = (e)=>{\n    // setTimeout(()=>{\n      window.removeEventListener('touchend', readSwipe)\n      if(e.changedTouches[0].screenY < touchStartPoint - 0 && counter <= 5){\n        nextValue();\n      }  \n      else if(e.changedTouches[0].screenY > touchStartPoint + 0 && counter >= 1){\n        prevValue();\n      }  \n  }\n  const touchStart = (e)=>{ setTouchStartPoint(e.changedTouches[0].clientY); }\n  const keyReaders = (e)=>{\n    window.removeEventListener('keyup', keyReaders);\n    if(e.keyCode === 40 && counter <= 3 ){ nextValue() }\n    else if(e.keyCode === 38 && counter >= 1){ prevValue() }\n  }\n\n  \n\n  useEffect(()=>{\n    \n\n    document.getElementById('value-title').style.opacity = 1;\n    document.getElementById('value-text').style.opacity = 1;\n    document.getElementById('value-text-div').style.width = '92%';\n    document.getElementById('value-text').style.bottom = '0px';\n    // 1. On render or state change, styles of changing content are set.\n\n    \n    \n    window.removeEventListener('wheel', readWheel)    \n    window.removeEventListener('touchend', readSwipe);\n    window.removeEventListener('touchstart', touchStart);\n    window.removeEventListener('keyup', keyReaders);\n    document.getElementById('down-arrow').removeEventListener('click', nextValue);\n    \n    setTimeout(()=>{\n      window.addEventListener('wheel', readWheel)    \n    }, 1250)\n    // 2. After 1.5s, wheel event listener is added to the window.\n    window.addEventListener('touchend', readSwipe);\n    window.addEventListener('touchstart', touchStart);\n    window.addEventListener('keyup', keyReaders);\n    document.getElementById('down-arrow').addEventListener('click', nextValue);\n  })\n  \n  // if(loadStatus === 'no'){\n  //   return (\n  //     <div style={{height:'100vh', width:'100vw', background:'linear-gradient(#212121, #3D3D3D)'}}><h1>loading</h1></div>\n  //   )\n  // }\n  \n  return(\n    <div id='page_value' className='page' >\n      <ValuesHeader />\n      <div id='value-con'>\n        <div id='title-and-text'>\n          <h1 id='value-title'>{title[counter]}</h1>\n          <div id='value-text-div'><p id='value-text'>{text[counter]}</p></div>\n        </div>\n        <div id='counterAndArrow'>\n          <h4 id='value-counter'>{`0${counter + 1}`}/07</h4>\n          <img src={'/assets/icons/values-down-arrow.png'} id='down-arrow' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Values;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}